{"ast":null,"code":"var _jsxFileName = \"/Users/miguelchen/Desktop/Sunset/SunSet/frontend/sunrise-client/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [location, setLocation] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [data, setData] = useState([]);\n  const fetchData = async () => {\n    console.log('Fetching data with:', {\n      location,\n      startDate,\n      endDate\n    });\n    try {\n      const response = await axios.get('http://localhost:3000/sunrise', {\n        params: {\n          location,\n          date_start: startDate,\n          date_end: endDate\n        }\n      });\n      console.log('Raw data received from backend:', response.data);\n      let normalizedData = [];\n      if (Array.isArray(response.data)) {\n        if (Array.isArray(response.data[0])) {\n          // Case 2: API returned a nested array\n          normalizedData = response.data[0];\n        } else {\n          // Case 1: Backend returned DB objects\n          normalizedData = response.data.map(item => ({\n            date: item.date_start || item.date,\n            sunrise: item.sunrise,\n            sunset: item.sunset,\n            golden_hour: item.golden_hour\n          }));\n        }\n      }\n      setData(normalizedData);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      alert('Error fetching data');\n    }\n  };\n  useEffect(() => {\n    console.log('Normalized data:', data);\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sun Event Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Location\",\n      value: location,\n      onChange: e => setLocation(e.target.value),\n      style: {\n        marginRight: 10\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: startDate,\n      onChange: e => setStartDate(e.target.value),\n      style: {\n        marginRight: 10\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: endDate,\n      onChange: e => setEndDate(e.target.value),\n      style: {\n        marginRight: 10\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchData,\n      children: \"Get Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), data.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        border: 1,\n        cellPadding: 5,\n        cellSpacing: 0,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Sunrise\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Sunset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Golden Hour Start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: data.map((event, index) => {\n            var _event$date, _event$date2;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: (_event$date2 = event.date) !== null && _event$date2 !== void 0 ? _event$date2 : '-'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: event.sunrise\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: event.sunset\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: event.golden_hour\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this)]\n            }, ((_event$date = event.date) !== null && _event$date !== void 0 ? _event$date : '') + index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"VYpsIyHFmLC3Br/8BEGEHAqkEQw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","axios","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","location","setLocation","startDate","setStartDate","endDate","setEndDate","data","setData","fetchData","console","log","response","get","params","date_start","date_end","normalizedData","Array","isArray","map","item","date","sunrise","sunset","golden_hour","error","alert","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","marginRight","type","onClick","length","border","cellPadding","cellSpacing","event","index","_event$date","_event$date2","_c","$RefreshReg$"],"sources":["/Users/miguelchen/Desktop/Sunset/SunSet/frontend/sunrise-client/src/App.tsx"],"sourcesContent":["import { useState } from 'react';\nimport axios from 'axios';\nimport { useEffect } from 'react';\n\ninterface SunEvent {\n  date?: string;\n  sunrise: string;\n  sunset: string;\n  golden_hour: string;\n}\n\nfunction App() {\n  const [location, setLocation] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [data, setData] = useState<SunEvent[]>([]);\n\n  const fetchData = async () => {\n    console.log('Fetching data with:', { location, startDate, endDate });\n    try {\n      const response = await axios.get('http://localhost:3000/sunrise', {\n        params: { location, date_start: startDate, date_end: endDate }\n      });\n\n      console.log('Raw data received from backend:', response.data);\n\n      let normalizedData: SunEvent[] = [];\n\n      if (Array.isArray(response.data)) {\n        if (Array.isArray(response.data[0])) {\n          // Case 2: API returned a nested array\n          normalizedData = response.data[0];\n        } else {\n          // Case 1: Backend returned DB objects\n          normalizedData = response.data.map((item: any) => ({\n            date: item.date_start || item.date,\n            sunrise: item.sunrise,\n            sunset: item.sunset,\n            golden_hour: item.golden_hour\n          }));\n        }\n      }\n\n      setData(normalizedData);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      alert('Error fetching data');\n    }\n  };\n\n  useEffect(() => {\n    console.log('Normalized data:', data);\n  }, [data]);\n\n  return (\n    <div style={{ padding: '20px' }}>\n      <h1>Sun Event Tracker</h1>\n\n      <input\n        placeholder=\"Location\"\n        value={location}\n        onChange={(e) => setLocation(e.target.value)}\n        style={{ marginRight: 10 }}\n      />\n      <input\n        type=\"date\"\n        value={startDate}\n        onChange={(e) => setStartDate(e.target.value)}\n        style={{ marginRight: 10 }}\n      />\n      <input\n        type=\"date\"\n        value={endDate}\n        onChange={(e) => setEndDate(e.target.value)}\n        style={{ marginRight: 10 }}\n      />\n      <button onClick={fetchData}>Get Data</button>\n\n      {data.length > 0 && (\n        <>\n          <h2>Results</h2>\n          <table border={1} cellPadding={5} cellSpacing={0}>\n            <thead>\n              <tr>\n                <th>Date</th>\n                <th>Sunrise</th>\n                <th>Sunset</th>\n                <th>Golden Hour Start</th>\n              </tr>\n            </thead>\n            <tbody>\n              {data.map((event, index) => (\n                <tr key={(event.date ?? '') + index}>\n                  <td>{event.date ?? '-'}</td>\n                  <td>{event.sunrise}</td>\n                  <td>{event.sunset}</td>\n                  <td>{event.golden_hour}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}